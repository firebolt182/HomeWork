//Задание №1 - Список спец номеров
        //Создать класс машина. У машины есть номер.
        //Создать 50 машин с номерами а0[01-50]ан799 (где [01-50] - это все значения от 01 до 50)
        //Создать 50 машин с номерами к0[01-50]се178
        //Соединить машины в единый стрим
        //Машины, с номерами 04[0-9] - это спец номера (врачи)
        //оставить только те машины, которые обладают спец номерами
        //Получить из машин номера
        //Соединить в единую строку, с разделителем в " ," - самостоятельное изучение
        //ожидаемый финал
        //"a040ан1799, a041ан799, ... , k048се178, k049се178"

        //Задание №2 - Сколько здесь "о" ?
        //Создать набор уникальных слов: "тонь", "тополь", "боль", "рой", "стройка"
        //Внутри одного стрима:
        //Посчитать количество букв "о" в одном слове
        //Посчитать сумму количества букв "о" во всех словах из набора
        //Если буквы "о" есть - напечатать количество букв "о", если нет выкинуть исключение
        //ожидаемый результат:
        // 6

        //Задание №3 - Небоскребы, небоскребы, а я...
        //Дано: Небоскреб - имя небоскреба, его высота в метрах.
        //Необходимо создать небоскребы:
        //1 Всемирный торговый центр 1 - 541м
        //2 Шанхайская башня - 632м
        //3	Бурдж-Халифа - 828м
        //4 Международный финансовый центр Пинань - 599м
        //5 Абрадж аль-Бейт - 601м
        //6 Всемирный центр Лотте - 555м

        //Занести данный список в List! Дважды положить бурдж халифа в лист.
        //С помощью стримов:
        //Убрать дубликаты
        //(РАЗНЫЕ СТРИМЫ)
        //Вывести только первые три небоскреба.
        //Вывести самый высокий небоскреб.
        //Вывести те небоскребы, которые выше километра.
        //Если выше нет, то вывести на экран: небоскреба выше километра - нет.

        Задание 4
        //Создать метод маскирования персональных данных, который:
                //Телефон (до/после маскирования): 79991113344 / 7999***3344
                //Email (до/после маскирования): test@yandex.ru / tes*@******.ru, my_mail@gmail.com / my_mai*@*****.com
                //Фио (до/после маскирования): Иванов Иван Иванович / И****в Иван И.
                //
                //Входящие параметры: String text
                //Возвращаемый результат: String
                //
                //Примеры возможного текста:

                //<client>(Какие то данные)<data>79991113344;test@yandex.ru;Иванов Иван Иванович</data></client> -
                // "<client>(Какие то данные)<data>7999***3344;tes*@******.ru;И****в Иван И.</data></client>"

                //<client>(Какие то данные)<data></data></client> - вернет тоже (никаких ошибок)

                //<client>(Какие то данные)<data>Иванов Иван Иванович;79991113344</data></client> -
                // "<client>(Какие то данные)<data>И****в Иван И.;7999***3344</data></client>"

                //Используемые технологии: String.find, String.replaceAll, String.split, String.join, String.contains, String.substring
                //Регулярные выражения, класс StringBuilder